name: Web (frontend React app)

on:
  push:
    branches:
      - main
    paths:
      - web/**
      - .github/workflows/web.yml
  pull_request:
    branches:
      - main
    paths:
      - web/**
      - .github/workflows/web.yml
    types:
      - opened
      - synchronize
      - closed

# Allow only one concurrent execution
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: web

env:
  VITE_PORT: 3000 # Required by 'npm test' since it loads config from vite.config.ts
  VITE_API_BASE_URL: 'http://localhost:5000/api' # Required by 'npm test' since it loads httpClient.ts

jobs:
  eslint:
    name: ESLint
    runs-on: ubuntu-24.04
    continue-on-error: true
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      - name: Install dependencies
        # Here I don't suppress audit with --no-audit like I do at the other 'npm ci' because I want to know
        # if there are security vulnerabilities.
        run: npm ci --no-fund
      - name: Run ESLint
        run: npm run lint

  tests:
    name: Tests
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      - name: Install dependencies
        run: npm ci --no-fund --no-audit
        # On my machine doing 'npm run' runs tests in watch mode, but on GitHub runners, because the environment
        # variable CI is true, 'npm run' only runs the tests once. (If CI was not set to true, we could force to run
        # tests once by using the command 'CI=true npm test'.) See https://vitest.dev/guide/cli.html#vitest
      - name: Run tests
        run: npm test

  deploy_dev:
    name: Deploy React web app to the dev environment
    needs: [eslint, tests]
    # Deploy only when pushing to the main branch or when a pull request is merged (closed) to then main branch
    # but not when is opened or synchronize.
    # See https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-24.04
    environment:
      name: dev
    # Permissions needed to interact with GitHubâ€™s OIDC Token endpoint
    # https://docs.github.com/en/actions/reference/security/oidc#workflow-permissions-for-the-requesting-the-oidc-token
    permissions:
      id-token: write # Allows the job to request the JWT token from GitHub's OIDC provider
      contents: read # Allows the action to clone your repository code. Required for actions/checkout
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'
      - name: Install dependencies
        run: npm ci --no-fund --no-audit
      - name: Build React web app
        run: npm run build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0 # https://github.com/aws-actions/configure-aws-credentials
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_OIDC_ROLE_ARN }}
          role-session-name: 'GitHubActions-web-deploy-dev'
          # We could also do:
          # role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
      - name: Upload build folder files to S3
        run: aws s3 sync build s3://${{ vars.WEB_S3_BUCKET }} --delete
      - name: Invalidate CloudFront distribution
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.WEB_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths '/*'
